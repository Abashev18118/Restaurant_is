services:
  auth_service:
    image: ghcr.io/netscrawler/restaurant_is-auth:latest
    container_name: auth_service
    ports:
      - "54821:54821"
    environment:
      - CONFIG_PATH=/auth/config/config.docker.yaml
    depends_on:
      auth_db:
        condition: service_healthy
    volumes:
      - ./config/auth:/auth/config
    networks:
      - risp
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  notify:
    image: ghcr.io/netscrawler/restaurant_is-notify:latest
    container_name: notify
    ports:
      - "54822:54822"
    environment:
      - CONFIG_PATH=/notify/config/config.docker.yaml
    volumes:
      - ./config/notify:/notify/config
    networks:
      - risp
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  menu_service:
    image: ghcr.io/netscrawler/restaurant_is-menu_service:latest
    container_name: menu_service
    ports:
      - "50052:50052"
    environment:
      - CONFIG_PATH=/menu/config/config.docker.yaml
    depends_on:
      menu_db:
        condition: service_healthy
    volumes:
      - ./config/menu:/menu/config
    networks:
      - risp
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  order_service:
    image: ghcr.io/netscrawler/restaurant_is-order_service:latest
    container_name: order_service
    ports:
      - "50051:50051" # gRPC port
    environment:
      - CONFIG_PATH=/order/config/config.docker.yaml
    volumes:
      - ./config/order:/order/config
    depends_on:
      order_db:
        condition: service_healthy
    networks:
      - risp
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  user_service:
    image: ghcr.io/netscrawler/restaurant_is-user_service:latest
    container_name: user_service
    ports:
      - "50045:50045"
    environment:
      - CONFIG_PATH=/user/config/config.docker.yaml
    volumes:
      - ./config/user:/user/config
    depends_on:
      user_db:
        condition: service_healthy
    networks:
      - risp
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  gate:
    image: ghcr.io/netscrawler/restaurant_is-gate:latest
    container_name: gate
    ports:
      - "8080:8080"
    environment:
      - CONFIG_PATH=/gate/config/config.docker.yaml
    volumes:
      - ./config/gate:/gate/config
    depends_on:
      user_db:
        condition: service_healthy
    networks:
      - risp
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  user_db:
    image: postgres:latest
    container_name: user_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: user
    ports:
      - "5439:5439"
    command: ["postgres", "-c", "port=5439"]
    volumes:
      - ./migrations/user/pg/init.sql:/docker-entrypoint-initdb.d:ro
      - user-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -p 5439"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - risp
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  auth_db:
    image: postgres:latest
    container_name: auth_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: auth
    ports:
      - "5432:5432"
    command: ["postgres", "-c", "port=5432"]
    volumes:
      - ./migrations/auth/pg/init.sql/:/docker-entrypoint-initdb.d:ro
      - auth-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -p 5432"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - risp
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  menu_db:
    image: postgres:latest
    container_name: menu_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: menu
    ports:
      - "5434:5434"
    command: ["postgres", "-c", "port=5434"]
    volumes:
      - ./migrations/menu/pg/init.sql/:/docker-entrypoint-initdb.d:ro
      - menu-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -p 5434"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - risp
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  order_db:
    image: postgres:latest
    container_name: order_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: order
    ports:
      - "5435:5435"
    command: ["postgres", "-c", "port=5435"]
    volumes:
      - ./migrations/order/pg/init.sql:/docker-entrypoint-initdb.d:ro
      - order-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -p 5435"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - risp
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9005:9000"
      - "9004:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server --console-address ":9001" /data
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9005/minio/health/ready"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - risp
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_NUM_PARTITIONS=1
      - KAFKA_DEFAULT_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    networks:
      - risp
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
    networks:
      - risp
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"


volumes:
  auth-postgres-data:
  menu-postgres-data:
  order-postgres-data:
  user-postgres-data:
  minio-data:
  zookeeper-data:
  pgdata:

networks:
  risp:
    name: risp
